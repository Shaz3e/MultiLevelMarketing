<?php

namespace App\Observers;

use App\Models\CompanyAccount;
use App\Models\Ledger;
use App\Models\PinCode;
use App\Models\User;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Facades\Log;
use Illuminate\Support\Str;

class PinCodeObserver
{
    /**
     * Handle the PinCode "created" event.
     */
    public function created(PinCode $pinCode): void
    {

        // Get Admin/Staff
        $admin = Auth::guard('admin')->user();

        // Create new ledger record when pin code created
        if ($admin) {
            $pinCode->admin_id = $admin->id;
            $this->addLedger($pinCode);
        } else {
            $user = Auth::user();
            if ($user) {
                $pinCode->user_id = $user->id;
                $this->addLedger($pinCode, $user);
            }
        }
        $pinCode->save();

        if ($admin) {
            // substract amount from main networking account id=2
            $companyAccount = CompanyAccount::find(2);

            $companyAccount->update([
                'total_out' => $companyAccount->total_out + $pinCode->amount,
                'last_withdraw' => $pinCode->amount,
                'last_withdraw_date' => now(),
            ]);
        } else {
            // substract amount into 2
            $amount = $pinCode->amount / 2;
            // Log::info("Amount: " . $amount);

            // Main Account = 1
            $mainAccount = CompanyAccount::find(1);
            $mainAccount->update([
                'total_in' => $mainAccount->total_in + $amount,
                'last_deposit' => $amount,
                'last_deposit_date' => now(),
            ]);

            // SST Account = 3

            // Calculate the percentage value
            $sst = $pinCode->amount * DiligentCreators('sst') / 100;

            $sstAccount = CompanyAccount::find(3);
            $sstAccount->update([
                'total_in' => $sstAccount->total_in + $sst,
                'last_deposit' => $sst,
                'last_deposit_date' => now(),
            ]);

            // Commission Networking Account = 4
            $commissionNetworkingAccunt = CompanyAccount::find(4);
            $commissionNetworkingAccunt->update([
                'total_in' => $commissionNetworkingAccunt->total_in + $amount,
                'last_deposit' => $amount,
                'last_deposit_date' => now(),
            ]);
        }
    }

    /**
     * Add ledger record
     */
    private function addLedger(PinCode $pinCode, User $user = null,)
    {
        $ledger = new Ledger();
        $ledger->pin_code = $pinCode->id;
        $ledger->transaction_number = Str::uuid();
        $ledger->withdraw = $pinCode->amount;

        if ($user) {
            $ledger->user_id = $user->id;
            $ledger->note = "Pin generated by: " . $user->name;
        } else {
            $ledger->note = "Pin generated by staff: " . auth()->guard('admin')->user()->name;
        }

        $ledger->save();
    }
}
